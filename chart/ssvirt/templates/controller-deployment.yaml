{{- if .Values.controller.enabled }}
{{- if gt (.Values.controller.replicaCount | int) 1 }}
{{- fail "controller.replicaCount must be 1 when using Recreate strategy to avoid controller conflicts" }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssvirt.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ssvirt.controllerLabels" . | nindent 4 }}
  {{- with (include "ssvirt.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  strategy:
    type: Recreate  # Controller should not have multiple replicas running simultaneously
  selector:
    matchLabels:
      {{- include "ssvirt.controllerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ssvirt.controllerSelectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with (include "ssvirt.annotations" .) }}
        {{- . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ssvirt.controllerServiceAccountName" . }}
      securityContext:
        runAsNonRoot: true
      containers:
        - name: controller
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          image: {{ include "ssvirt.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/local/bin/ssvirt-controller
          ports:
            - name: metrics
              containerPort: 8081
              protocol: TCP
          env:
            - name: SSVIRT_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-host
            - name: SSVIRT_DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-port
            - name: SSVIRT_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-username
            - name: SSVIRT_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.postgresql.enabled }}
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
                  {{- else }}
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-password
                  {{- end }}
            - name: SSVIRT_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-database
            - name: SSVIRT_DATABASE_SSLMODE
              valueFrom:
                secretKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-sslmode
            - name: SSVIRT_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: log-level
            - name: SSVIRT_LOG_FORMAT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: log-format
            - name: SSVIRT_DATABASE_MAX_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-max-connections
            - name: SSVIRT_DATABASE_MAX_IDLE_CONNECTIONS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-max-idle-connections
            - name: SSVIRT_DATABASE_CONN_MAX_LIFETIME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-conn-max-lifetime
            - name: SSVIRT_DATABASE_CONN_MAX_IDLE_TIME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: database-conn-max-idle-time
            - name: SSVIRT_KUBERNETES_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ssvirt.fullname" . }}-config
                  key: kubernetes-namespace
            {{- if .Values.initialAdmin.enabled }}
            - name: SSVIRT_INITIAL_ADMIN_ENABLED
              value: "true"
            {{- if .Values.initialAdmin.username }}
            - name: SSVIRT_INITIAL_ADMIN_USERNAME
              value: {{ .Values.initialAdmin.username | quote }}
            {{- end }}
            {{- if .Values.initialAdmin.password }}
            - name: SSVIRT_INITIAL_ADMIN_PASSWORD
              value: {{ .Values.initialAdmin.password | quote }}
            {{- end }}
            {{- if .Values.initialAdmin.email }}
            - name: SSVIRT_INITIAL_ADMIN_EMAIL
              value: {{ .Values.initialAdmin.email | quote }}
            {{- end }}
            {{- if .Values.initialAdmin.firstName }}
            - name: SSVIRT_INITIAL_ADMIN_FIRST_NAME
              value: {{ .Values.initialAdmin.firstName | quote }}
            {{- end }}
            {{- if .Values.initialAdmin.lastName }}
            - name: SSVIRT_INITIAL_ADMIN_LAST_NAME
              value: {{ .Values.initialAdmin.lastName | quote }}
            {{- end }}
            {{- if or .Values.initialAdmin.existingSecret .Values.initialAdmin.autoGenerate }}
            - name: SSVIRT_INITIAL_ADMIN_SECRET
              value: {{ .Values.initialAdmin.existingSecret | default .Values.initialAdmin.secretName | default "ssvirt-initial-admin-generated" | quote }}
            {{- end }}
            {{- end }}
          {{- with .Values.controller.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.controller.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config-dir
              mountPath: /etc/ssvirt
              readOnly: true
            {{- if and .Values.initialAdmin.enabled (or .Values.initialAdmin.existingSecret .Values.initialAdmin.autoGenerate) }}
            - name: initial-admin-secret
              mountPath: /var/run/secrets/initial-admin
              readOnly: true
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config-dir
          configMap:
            name: {{ include "ssvirt.fullname" . }}-config
        {{- if and .Values.initialAdmin.enabled (or .Values.initialAdmin.existingSecret .Values.initialAdmin.autoGenerate) }}
        - name: initial-admin-secret
          secret:
            secretName: {{ .Values.initialAdmin.existingSecret | default .Values.initialAdmin.secretName | default "ssvirt-initial-admin-generated" }}
        {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
