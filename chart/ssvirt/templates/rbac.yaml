{{- if .Values.rbac.create }}
# API Server RBAC - includes embedded Kubernetes management capabilities
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "ssvirt.fullname" . }}-api-server
  labels:
    {{- include "ssvirt.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-server
  {{- $rbacAnnotations := .Values.rbac.annotations | default dict }}
  {{- $commonAnnotations := include "ssvirt.annotations" . | fromYaml | default dict }}
  {{- $mergedAnnotations := merge $rbacAnnotations $commonAnnotations }}
  {{- if $mergedAnnotations }}
  annotations:
    {{- toYaml $mergedAnnotations | nindent 4 }}
  {{- end }}
rules:
# Namespace management permissions for VDCs
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# ServiceAccounts in VDC namespaces
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Secrets in VDC namespaces
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ConfigMaps in VDC namespaces
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ResourceQuotas for VDC resource management
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# LimitRanges for VDC resource management
- apiGroups: [""]
  resources: ["limitranges"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# NetworkPolicies for VDC isolation
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# RBAC for tenant permissions
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# OpenShift Virtualization resources
- apiGroups: ["kubevirt.io"]
  resources: ["virtualmachines", "virtualmachineinstances"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["instancetype.kubevirt.io"]
  resources: ["virtualmachineinstancetypes", "virtualmachineclusterinstancetypes"]
  verbs: ["get", "list", "watch"]
# OpenShift networking
- apiGroups: ["k8s.ovn.org"]
  resources: ["userdefinednetworks"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# OpenShift Templates for catalog integration
- apiGroups: ["template.openshift.io"]
  resources: ["templates"]
  verbs: ["get", "list", "watch"]
# Template instances for VM creation
- apiGroups: ["template.openshift.io"]
  resources: ["templateinstances"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "ssvirt.fullname" . }}-api-server
  labels:
    {{- include "ssvirt.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-server
  {{- $rbacAnnotations := .Values.rbac.annotations | default dict }}
  {{- $commonAnnotations := include "ssvirt.annotations" . | fromYaml | default dict }}
  {{- $mergedAnnotations := merge $rbacAnnotations $commonAnnotations }}
  {{- if $mergedAnnotations }}
  annotations:
    {{- toYaml $mergedAnnotations | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "ssvirt.fullname" . }}-api-server
subjects:
- kind: ServiceAccount
  name: {{ include "ssvirt.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}